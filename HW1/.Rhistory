print(aug_matrix)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (aug_matrix[row+2,col+1]) * aug_matrix[row+2,]
print(aug_matrix)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
.333 + 3*(.955)
x = .333 + 3*(.955)
x
x = .333 + (3 *.955)
x
3.918 + .333 + (3 *.955)
.333(.955) = 0
.333*(.955) = 0
.333*(.955)
-.318 + .955*(3)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
print(x3)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
print.char(x3)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
print(x3)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
print(x2)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
print(round(x2,2))
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
print(round(x3,2))
print(round(x2,2))
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - aug_matrix[row+2,col+3]
print(round(x3,2))
print(round(x2,2))
print(round(x1,2))
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
print(round(x3,2))
print(round(x2,2))
print(round(x1,2))
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
print(round(x3,2))
print(round(x2,2))
print(round(x1,2))
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
print(round(x3,2))
print(round(x2,2))
print(round(x1,2))
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
print(round(x3[1],2))
print(round(x2[1],2))
print(round(x1[1],2))
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3][1]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
print(round(x3,2))
print(round(x2[1],2))
print(round(x1[1],2))
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
colnames(aug_matrix) <- NULL
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3][1]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
print(round(x3,2))
print(round(x2[1],2))
print(round(x1[1],2))
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
colnames(aug_matrix) <- NULL
print(aug_matrix)
col <- 1
row <- 1
if (aug_matrix[col,row] == 1)
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3][1]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
colnames(aug_matrix) <- NULL
print(aug_matrix)
col <- 1
row <- 1
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3][1]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
colnames(aug_matrix) <- NULL
print(aug_matrix)
col <- 1
row <- 1
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3][1]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
solution <- c()
solution <- c(round(x1,2), round(x2,2),round(x3,2))
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
solve_three_by_three_equations <- function(m, v){
aug_matrix <- cbind(m,v)
colnames(aug_matrix) <- NULL
print(aug_matrix)
col <- 1
row <- 1
aug_matrix[row+1,] <- (-aug_matrix[row+1,col] * aug_matrix[row,]) + aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <-  (-aug_matrix[row+2,col] * aug_matrix[row,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+1,] <- (1/aug_matrix[row+1,col+1]) * aug_matrix[row+1,]
print(aug_matrix)
aug_matrix[row+2,] <- (-aug_matrix[row+2,col+1] * aug_matrix[row+1,]) + aug_matrix[row+2,]
print(aug_matrix)
aug_matrix[row+2,] <- (1/aug_matrix[row+2,col+2]) * aug_matrix[row+2,]
print(aug_matrix)
x3 <- aug_matrix[row+2,col+3][1]
x2 <- aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])
x1 <- aug_matrix[row,col+3] - (aug_matrix[row+1,col+3] - (aug_matrix[row+1,col+2]* aug_matrix[row+2,col+3])) - (3*aug_matrix[row+2,col+3])
solution <- c()
solution[1] <- round(x1,2)
solution[2] <- round(x2,2)
solution[3] <- round(x3,2)
return (solution)
}
m <-matrix(c(1,2,-1,1,-1,-2,3,5,4), ncol=3, nrow=3)
v <- c(1,2,6)
solution <- solve_three_by_three_equations(m,v)
solution
